@use '../../../styles/variables' as vars;
@use '../../../styles/mixins' as mixins;

.stepContainer {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-xl;
  height: 100%;
}

.fieldsGrid {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-xl;
  flex: 1;
}

.selectGroup {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-md;
}

.selectLabel {
  @include mixins.body-text;
  font-weight: vars.$font-weight-medium;
  font-size: vars.$font-size-sm;
  color: var(--color-text-primary);
}

.optionGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: vars.$spacing-sm;

  @include mixins.mobile-only {
    grid-template-columns: 1fr;
  }
}

.optionItem {
  @include mixins.flex-center;
  gap: vars.$spacing-sm;
  padding: vars.$spacing-md;
  border: 1px solid var(--color-border);
  border-radius: vars.$border-radius-md;
  cursor: pointer;
  transition: all vars.$transition-fast;
  background-color: var(--color-background);

  &:hover {
    border-color: var(--color-primary);
    background-color: var(--color-primary-light);
  }

  input[type='radio'] {
    margin: 0;
  }

  input[type='radio']:checked + .optionLabel {
    font-weight: vars.$font-weight-medium;
  }

  &:has(input:checked) {
    border-color: var(--color-primary);
    background-color: var(--color-primary-light);
  }

  &:focus-visible,
  &:focus-within {
    border-color: var(--color-primary);
    background-color: var(--color-primary-light);
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

.optionLabel {
  @include mixins.body-text;
  font-size: vars.$font-size-sm;
  color: var(--color-text-primary);
  flex: 1;
  text-align: center;
}

.optionContent {
  flex: 1;
  text-align: left;
}

.optionDescription {
  @include mixins.body-text-sm;
  color: var(--color-text-muted);
  font-size: vars.$font-size-xs;
  margin-top: vars.$spacing-xs;
}

.optionMeta {
  @include mixins.body-text-sm;
  color: var(--color-primary);
  font-size: vars.$font-size-xs;
  font-weight: vars.$font-weight-medium;
  margin-top: vars.$spacing-xs;
}

.selectDescription {
  @include mixins.body-text-sm;
  color: var(--color-text-secondary);
  font-size: vars.$font-size-sm;
  margin-bottom: vars.$spacing-sm;
}

.categoryLabel {
  @include mixins.body-text;
  font-weight: vars.$font-weight-semibold;
  color: var(--color-text-primary);
  font-size: vars.$font-size-sm;
  margin-bottom: vars.$spacing-sm;
  margin-top: vars.$spacing-lg;

  &:first-child {
    margin-top: 0;
  }
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-sm;
}

.checkboxItem {
  display: flex;
  align-items: flex-start;
  gap: vars.$spacing-sm;
  padding: vars.$spacing-md;
  border: 1px solid var(--color-border);
  border-radius: vars.$border-radius-md;
  cursor: pointer;
  transition: all vars.$transition-fast;

  &:hover {
    background-color: var(--color-surface-hover);
  }

  &:has(input:checked) {
    border-color: var(--color-primary);
    background-color: var(--color-primary-light);
  }

  &:focus-visible,
  &:has(input:focus-visible) {
    border-color: var(--color-primary);
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  input[type='checkbox'] {
    margin: 0;
    margin-top: 2px;
  }
}

.checkboxContent {
  flex: 1;
}

.checkboxLabel {
  @include mixins.body-text;
  font-size: vars.$font-size-sm;
  font-weight: vars.$font-weight-medium;
  color: var(--color-text-primary);
  margin-bottom: vars.$spacing-xs;
}

.checkboxDescription {
  @include mixins.body-text-sm;
  color: var(--color-text-secondary);
  font-size: vars.$font-size-xs;
}

.summary {
  @include mixins.card;
  padding: vars.$spacing-lg;
  background-color: var(--color-surface);
  border-radius: vars.$border-radius-lg;

  h3 {
    @include mixins.heading-3;
    margin-bottom: vars.$spacing-md;
  }

  p {
    @include mixins.body-text;
    margin-bottom: vars.$spacing-sm;
    font-size: vars.$font-size-sm;

    &:last-child {
      margin-bottom: 0;
    }

    strong {
      font-weight: vars.$font-weight-semibold;
      color: var(--color-text-primary);
    }
  }
}

.error {
  @include mixins.body-text-sm;
  color: var(--color-error);
  font-size: vars.$font-size-xs;
}

.rangeGroup {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-sm;
}

.rangeLabel {
  @include mixins.body-text;
  font-weight: vars.$font-weight-medium;
  font-size: vars.$font-size-sm;
  color: var(--color-text-primary);
}

.rangeInput {
  width: 100%;
  height: 8px;
  background: var(--color-surface);
  border-radius: vars.$border-radius-md;
  outline: none;
  appearance: none;

  &::-webkit-slider-thumb {
    appearance: none;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: var(--color-primary);
    cursor: pointer;
    border: 2px solid var(--color-background);
    box-shadow: 0 2px 4px rgb(0 0 0 / 0.1);

    &:hover {
      background: var(--color-primary-hover);
    }
  }

  &::-moz-range-thumb {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: var(--color-primary);
    cursor: pointer;
    border: 2px solid var(--color-background);
    box-shadow: 0 2px 4px rgb(0 0 0 / 0.1);

    &:hover {
      background: var(--color-primary-hover);
    }
  }
}

.rangeValue {
  @include mixins.body-text-sm;
  color: var(--color-text-secondary);
  text-align: center;
  margin-top: vars.$spacing-xs;
}

.inputGroup {
  display: flex;
  gap: vars.$spacing-md;

  @include mixins.mobile-only {
    flex-direction: column;
  }
}

.milestonesContainer {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-sm;
}

.milestoneItem {
  display: flex;
  align-items: flex-start;
  gap: vars.$spacing-sm;
}

.removeMilestone {
  @include mixins.flex-center;
  width: 32px;
  height: 32px;
  border: 1px solid var(--color-error);
  background-color: transparent;
  color: var(--color-error);
  border-radius: vars.$border-radius-md;
  cursor: pointer;
  transition: all vars.$transition-fast;
  margin-top: 8px;

  &:hover {
    background-color: var(--color-error);
    color: white;
  }
}

.addMilestone {
  @include mixins.button-secondary;
  @include mixins.button-size(vars.$spacing-sm, vars.$spacing-md, vars.$font-size-sm);
  align-self: flex-start;
  color: var(--color-primary);
  border-color: var(--color-primary);

  &:hover {
    background-color: var(--color-primary-light);
  }
}
