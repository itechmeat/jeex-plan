@use '../../../styles/variables' as vars;
@use '../../../styles/mixins' as mixins;

.wrapper {
  display: flex;
  flex-direction: column;
  gap: vars.$spacing-sm;

  &.fullWidth {
    width: 100%;
  }
}

.label {
  @include mixins.body-text;
  font-weight: vars.$font-weight-medium;
  font-size: vars.$font-size-sm;
  color: var(--color-text-primary);
}

.inputContainer {
  position: relative;
  display: flex;
  align-items: center;
}

.input {
  @include mixins.input-base;

  .hasLeftIcon & {
    padding-left: vars.$spacing-3xl;
  }

  .hasRightIcon & {
    padding-right: vars.$spacing-3xl;
  }

  .hasError & {
    border-color: var(--color-error);

    &:focus {
      border-color: var(--color-error);
      box-shadow: 0 0 0 3px rgb(239 68 68 / 0.1);
    }
  }
}

.leftIcon,
.rightIcon {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  color: var(--color-text-muted);
  pointer-events: none;

  svg {
    width: 16px;
    height: 16px;
  }
}

.leftIcon {
  left: vars.$spacing-lg;
}

.rightIcon {
  right: vars.$spacing-lg;
}

.helperContainer {
  display: flex;
  align-items: center;
  gap: vars.$spacing-sm;
}

.error {
  @include mixins.body-text-sm;
  color: var(--color-error);
  font-size: vars.$font-size-xs;
}

.helperText {
  @include mixins.body-text-sm;
  color: var(--color-text-muted);
  font-size: vars.$font-size-xs;
}
