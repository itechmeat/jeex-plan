@use '../../styles/variables' as vars;
@use '../../styles/mixins' as mixins;

.healthStatus {
  min-height: 100vh;
  background-color: var(--color-surface);
}

.container {
  @include mixins.container;
  padding-top: vars.$spacing-3xl;
  padding-bottom: vars.$spacing-3xl;
}

.header {
  text-align: center;
  margin-bottom: vars.$spacing-2xl;

  h1 {
    @include mixins.heading-1;
    margin-bottom: vars.$spacing-lg;
    background: linear-gradient(135deg, var(--color-primary), var(--color-info));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  p {
    @include mixins.body-text;
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto;
  }
}

// Loading State
.loading {
  @include mixins.flex-center;
  min-height: 200px;
  gap: vars.$spacing-lg;

  .loadingIcon {
    @include mixins.spinner(32px, 3px);
  }

  span {
    @include mixins.body-text;
    color: var(--color-text-secondary);
  }
}

// Overall Status Banner
.statusBanner {
  @include mixins.card;
  margin-bottom: vars.$spacing-2xl;
  border: none;
  overflow: hidden;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--color-error);
  }

  &.pass::before {
    background: linear-gradient(90deg, var(--color-success), #16a085);
  }

  &.warn::before {
    background: linear-gradient(90deg, var(--color-warning), #e67e22);
  }

  &.fail::before {
    background: linear-gradient(90deg, var(--color-error), #c0392b);
  }

  &.unknown::before {
    background: linear-gradient(90deg, var(--color-text-muted), #7f8c8d);
  }
}

.statusBannerContent {
  @include mixins.flex-between;
  padding: vars.$spacing-xl vars.$spacing-2xl;
  gap: vars.$spacing-lg;

  @include mixins.mobile-only {
    @include mixins.flex-column;
    gap: vars.$spacing-lg;
    text-align: center;
  }
}

.statusInfo {
  @include mixins.flex-center;
  gap: vars.$spacing-lg;

  @include mixins.mobile-only {
    @include mixins.flex-column;
    gap: vars.$spacing-md;
  }
}

.statusIcon {
  width: 48px;
  height: 48px;
  padding: vars.$spacing-md;
  border-radius: 50%;

  &.pass {
    color: var(--color-success);
    background: rgba(16, 185, 129, 0.1);
  }

  &.warn {
    color: var(--color-warning);
    background: rgba(245, 158, 11, 0.1);
  }

  &.fail {
    color: var(--color-error);
    background: rgba(239, 68, 68, 0.1);
  }

  &.unknown {
    color: var(--color-text-muted);
    background: rgba(148, 163, 184, 0.1);
  }
}

.statusDetails {
  h2 {
    @include mixins.heading-2;
    margin-bottom: vars.$spacing-xs;
  }

  p {
    @include mixins.body-text;
    color: var(--color-text-secondary);
    margin: 0;
  }
}

.statusMetrics {
  @include mixins.flex-center;
  gap: vars.$spacing-xl;

  @include mixins.mobile-only {
    gap: vars.$spacing-lg;
    justify-content: center;
    flex-wrap: wrap;
  }
}

.metric {
  text-align: center;

  .value {
    @include mixins.heading-2;
    margin-bottom: vars.$spacing-xs;

    &.success {
      color: var(--color-success);
    }
    &.warning {
      color: var(--color-warning);
    }
    &.error {
      color: var(--color-error);
    }
  }

  .label {
    @include mixins.body-text-sm;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 0;
  }
}

// Services Grid
.servicesGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: vars.$spacing-xl;

  @include mixins.tablet-up {
    grid-template-columns: repeat(2, 1fr);
  }

  @include mixins.desktop-up {
    grid-template-columns: repeat(3, 1fr);
  }

  @include mixins.large-desktop-up {
    grid-template-columns: repeat(4, 1fr);
  }
}

// Service Card
.serviceCard {
  @include mixins.card-hover;
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: var(--color-text-muted);
  }

  &.pass::before {
    background: var(--color-success);
  }
  &.warn::before {
    background: var(--color-warning);
  }
  &.fail::before {
    background: var(--color-error);
  }

  &:hover {
    transform: translateY(-4px);
    box-shadow: vars.$shadow-lg;
  }
}

.serviceHeader {
  @include mixins.flex-between;
  padding: vars.$spacing-xl vars.$spacing-xl vars.$spacing-lg;
  align-items: flex-start;
}

.serviceInfo {
  @include mixins.flex-center;
  gap: vars.$spacing-md;
  min-width: 0;
  flex: 1;
}

.serviceIcon {
  width: 40px;
  height: 40px;
  padding: vars.$spacing-sm;
  border-radius: vars.$border-radius-lg;
  color: white;
  flex-shrink: 0;

  &.api {
    background: linear-gradient(135deg, #667eea, #764ba2);
  }

  &.database {
    background: linear-gradient(135deg, #f093fb, #f5576c);
  }

  &.cache {
    background: linear-gradient(135deg, #4facfe, #00f2fe);
  }

  &.queue {
    background: linear-gradient(135deg, #43e97b, #38f9d7);
  }

  &.frontend {
    background: linear-gradient(135deg, #fa709a, #fee140);
  }

  &.other {
    background: linear-gradient(135deg, #a8edea, #fed6e3);
    color: var(--color-text-primary);
  }
}

.serviceName {
  @include mixins.heading-3;
  margin: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.responseTime {
  @include mixins.body-text-sm;
  color: var(--color-text-muted);
  background: var(--color-surface);
  padding: vars.$spacing-xs vars.$spacing-sm;
  border-radius: vars.$border-radius-sm;
  font-family: vars.$font-family-mono;
  font-weight: vars.$font-weight-medium;
  white-space: nowrap;
}

.serviceBody {
  padding: 0 vars.$spacing-xl vars.$spacing-xl;
}

.endpoint {
  @include mixins.body-text-sm;
  color: var(--color-text-secondary);
  font-family: vars.$font-family-mono;
  background: var(--color-surface);
  padding: vars.$spacing-sm vars.$spacing-md;
  border-radius: vars.$border-radius-sm;
  margin-bottom: vars.$spacing-md;
  word-break: break-all;
  font-size: vars.$font-size-xs;
}

.status {
  display: inline-flex;
  align-items: center;
  gap: vars.$spacing-xs;
  padding: vars.$spacing-xs vars.$spacing-md;
  border-radius: vars.$border-radius-sm;
  font-size: vars.$font-size-sm;
  font-weight: vars.$font-weight-medium;
  margin-bottom: vars.$spacing-md;
  text-transform: capitalize;

  &.pass {
    background: rgba(16, 185, 129, 0.1);
    color: var(--color-success);
  }

  &.warn {
    background: rgba(245, 158, 11, 0.1);
    color: var(--color-warning);
  }

  &.fail {
    background: rgba(239, 68, 68, 0.1);
    color: var(--color-error);
  }
}

.details {
  @include mixins.body-text-sm;
  color: var(--color-text-secondary);
  background: var(--color-surface);
  padding: vars.$spacing-md;
  border-radius: vars.$border-radius-sm;
  border-left: 3px solid var(--color-border);
  margin-bottom: vars.$spacing-md;
  line-height: vars.$line-height-relaxed;

  &.pass {
    background: rgba(16, 185, 129, 0.05);
    border-left-color: var(--color-success);
    color: var(--color-success);
  }

  &.warn {
    background: rgba(245, 158, 11, 0.05);
    border-left-color: var(--color-warning);
    color: var(--color-warning);
  }

  &.fail {
    background: rgba(239, 68, 68, 0.05);
    border-left-color: var(--color-error);
    color: var(--color-error);
  }
}

.serviceFooter {
  @include mixins.flex-between;
  align-items: center;

  .timestamp {
    @include mixins.body-text-sm;
    color: var(--color-text-muted);
    margin: 0;
    font-size: vars.$font-size-xs;
  }

  .uptime {
    @include mixins.body-text-sm;
    color: var(--color-text-secondary);
    font-family: vars.$font-family-mono;
    font-size: vars.$font-size-xs;
    font-weight: vars.$font-weight-medium;
  }
}

// Refresh Button
.refreshButton {
  @include mixins.button-secondary;
  @include mixins.button-size(vars.$spacing-sm, vars.$spacing-md, vars.$font-size-sm);
  position: fixed;
  bottom: vars.$spacing-2xl;
  right: vars.$spacing-2xl;
  z-index: vars.$z-index-fixed;
  border-radius: 50%;
  width: 56px;
  height: 56px;
  padding: 0;
  box-shadow: vars.$shadow-lg;

  &:hover {
    transform: scale(1.05);
    box-shadow: vars.$shadow-xl;
  }

  .refreshIcon {
    width: 20px;
    height: 20px;

    &.spinning {
      animation: spin 1s linear infinite;
    }
  }
}

// Error State
.error {
  @include mixins.card;
  @include mixins.flex-center;
  min-height: 200px;
  gap: vars.$spacing-lg;
  text-align: center;
  margin: vars.$spacing-2xl 0;

  .errorIcon {
    width: 48px;
    height: 48px;
    color: var(--color-error);
  }

  .errorMessage {
    @include mixins.body-text;
    color: var(--color-text-secondary);
    max-width: 500px;
  }
}

// Animation for staggered service cards
.serviceCard {
  @include mixins.slide-in-up;
  animation-delay: calc(var(--card-index, 0) * 0.1s);
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .healthStatus {
    background-color: var(--color-dark-surface);
  }

  .statusBanner {
    background-color: var(--color-dark-background);
  }

  .serviceCard {
    background-color: var(--color-dark-background);
    border-color: var(--color-dark-border);
  }
}
