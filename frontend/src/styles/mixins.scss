@use './variables' as vars;

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Button styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: vars.$border-radius-md;
  font-family: vars.$font-family-sans;
  font-weight: vars.$font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all vars.$transition-fast;
  outline: none;

  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-size($padding-y, $padding-x, $font-size) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
}

@mixin button-primary {
  @include button-base;
  background-color: var(--color-primary);
  color: var(--button-primary-text, white);

  &:hover:not(:disabled) {
    background-color: var(--color-primary-hover);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);

  &:hover:not(:disabled) {
    background-color: var(--color-surface-hover);
  }
}

// Input styles
@mixin input-base {
  width: 100%;
  padding: vars.$spacing-md vars.$spacing-lg;
  border: 1px solid var(--color-border);
  border-radius: vars.$border-radius-md;
  background-color: var(--color-background);
  color: var(--color-text-primary);
  font-family: vars.$font-family-sans;
  font-size: vars.$font-size-base;
  transition: border-color vars.$transition-fast;

  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: var(--color-surface);
  }

  &::placeholder {
    color: var(--color-text-muted);
  }
}

// Card styles
@mixin card {
  background-color: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: vars.$border-radius-lg;
  box-shadow: vars.$shadow-sm;
}

@mixin card-hover {
  @include card;
  transition: all vars.$transition-fast;

  &:hover {
    box-shadow: vars.$shadow-md;
    border-color: var(--color-border-focus);
  }
}

// Typography
@mixin heading-1 {
  font-size: vars.$font-size-3xl;
  font-weight: vars.$font-weight-bold;
  line-height: vars.$line-height-tight;
  color: var(--color-text-primary);
}

@mixin heading-2 {
  font-size: vars.$font-size-2xl;
  font-weight: vars.$font-weight-semibold;
  line-height: vars.$line-height-tight;
  color: var(--color-text-primary);
}

@mixin heading-3 {
  font-size: vars.$font-size-xl;
  font-weight: vars.$font-weight-semibold;
  line-height: vars.$line-height-tight;
  color: var(--color-text-primary);
}

@mixin body-text {
  font-size: vars.$font-size-base;
  font-weight: vars.$font-weight-normal;
  line-height: vars.$line-height-normal;
  color: var(--color-text-primary);
}

@mixin body-text-sm {
  font-size: vars.$font-size-sm;
  font-weight: vars.$font-weight-normal;
  line-height: vars.$line-height-normal;
  color: var(--color-text-secondary);
}

// Responsive breakpoints
@mixin mobile-only {
  @media (max-width: #{vars.$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: vars.$breakpoint-md) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: vars.$breakpoint-lg) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: vars.$breakpoint-xl) {
    @content;
  }
}

// Layout utilities
@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 vars.$spacing-lg;

  @include tablet-up {
    padding: 0 vars.$spacing-xl;
  }
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Animation utilities
@mixin fade-in($duration: vars.$transition-normal) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@mixin slide-in-up($duration: vars.$transition-normal) {
  transform: translateY(20px);
  opacity: 0;
  animation: slideInUp $duration ease-out forwards;
}

@keyframes slideInUp {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Loading spinner
@mixin spinner($size: 24px, $border-width: 2px) {
  width: $size;
  height: $size;
  border: $border-width solid var(--color-border);
  border-top: $border-width solid var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
